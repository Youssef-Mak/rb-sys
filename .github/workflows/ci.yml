---
name: "CI"

on:
  push:
    branches:
      - main
  pull_request: {}

env:
  DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}
  DEBUG_OUTPUT_DIR: /tmp/debug

jobs:
  build_and_test:
    name: 🧪 Test
    strategy:
      fail-fast: false
      matrix:
        # Test against all versions supported by rubygems
        ruby_version: ["3.1"]
        cache-strategy: ["sccache", "tarball"]
        sys:
          - os: ubuntu-latest
            rust_toolchain: stable
          - os: macos-latest
            rust_toolchain: stable
          - os: windows-2022
            rust_toolchain: stable
    runs-on: ${{ matrix.sys.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup debug info
        shell: bash
        run: script/ci/set-debug-env.sh

      - uses: oxidize-rb/actions/setup-ruby-and-rust@main
        if: matrix.ruby_version != 'skip'
        with:
          ruby-version: ${{ matrix.ruby_version }}
          rustup-toolchain: ${{ matrix.sys.rust_toolchain }}
          bundler-cache: true
          cargo-cache: ${{ matrix.cache-strategy }}
          cache-version: v123

      - name: Bundle install
        if: matrix.ruby_version == 'skip'
        shell: bash
        run: bundle install -j3

      - name: Debug makefile
        if: env.ACTIONS_STEP_DEBUG == 'true'
        shell: bash
        run: |
          bundle exec rake debug:mkmf > $DEBUG_OUTPUT_DIR/Makefile
          echo "::group::Print mkmf generated Makefile"
          cat $DEBUG_OUTPUT_DIR/Makefile
          echo "::endgroup::"

      - name: 📍 Examples test
        shell: bash
        env:
          RB_SYS_CARGO_PROFILE: "release"
        run: script/ci/upload-on-failure.sh "bundle exec rake test:examples" "examples-test" "./examples"

      - name: 🧪 Cargo test
        shell: bash
        run: script/ci/upload-on-failure.sh "bundle exec rake test:cargo" "cargo-test" "./target"

      - name: 💎 Gem test
        run: bundle exec rake test:gem

      - name: 💨 Smoke test
        shell: bash
        run: |
          set -ex
          gem update --system > /dev/null
          export RUBYOPT="-I$PWD/gem/lib"
          pushd examples/rust_reverse
          bundle exec rake build
          gem install pkg/*.gem --verbose
          ../../script/ci/upload-on-failure.sh "gem install pkg/*.gem --verbose" "smoke-test" "./pkg"
          ruby -rrust_reverse -e "puts RustReverse.reverse('olleh')" | grep hello
          popd

      - name: ✂️ Run clippy
        run: cargo clippy

      - name: 📃 Run cargo fmt
        if: matrix.sys.rust_toolchain == 'stable'
        run: cargo fmt --check
