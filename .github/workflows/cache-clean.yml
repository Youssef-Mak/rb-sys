name: Cache Clean

on:
  workflow_dispatch:
    inputs:
      all-branches:
        type: boolean
        description: "Delete caches for all branches (nuclear option)"
  pull_request:
    types:
      - closed

permissions:
  actions: write

jobs:
  clear-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Delete caches
        uses: actions/github-script@v6
        with:
          script: |
            let totalDeleted = 0;
            let totalBytes = 0;
            let pageSize = 10;
            let inputs = context.payload.inputs;
            let ref = context.ref;

            if (inputs && inputs["all-branches"] == "true") {
              console.warn("Deleting caches for all branches");
              ref = undefined;
            }

            async function deleteCachesForRef(branch) {
              let ref = `refs/heads/${branch}`;
              let currentPage = 1;

              while (true) {
                const caches = await github.rest.actions.getActionsCacheList({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  per_page: pageSize,
                  page: currentPage,
                  ref: ref,
                  page: currentPage,
                });

                let promises = [];

                for (const cache of caches.data.actions_caches) {
                  const deleted = github.rest.actions.deleteActionsCacheById({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    cache_id: cache.id,
                  });

                  deleted.then(() => {
                    console.log(
                      `Deleted cache ${cache.key} (id: ${cache.id}) on page ${currentPage})`
                    );
                    totalDeleted++;
                    totalBytes += cache.size_in_bytes;
                  });

                  promises.push(deleted);
                }

                await Promise.all(promises);

                if (caches.data.total_count <= currentPage * pageSize) {
                  console.log(`Deleted ${caches.data.total_count} caches for ${ref}`);
                  break;
                }

                currentPage++;
              }
            }

            await deleteCachesForRef(ref);
            let totalMb = totalBytes / 1024 / 1024;
            console.log(`Clear completed, deleted ${totalDeleted} caches (${totalMb} MB)`);
